@using System.Threading

@page "/{token}"
@page "/"

@inject IEntityService Service
@inject ITokenService Tokens

<div class="container">
    <AddEntity EditorMode="EditorMode" EditCompleted="AddOrEditEntity" />
    @foreach (var e in ToshaEntities)
    {
        if (e.ImageLink != null)
        {
            <ToshaEntity EntityObject="e" EditorMode="EditorMode" />
        }
        else
        {
            <DoubleToshaEntity EntityObject="e" EditorMode="EditorMode" />
        }
    }
</div>



@code {
    [Parameter]
    public string Token { get; set; }

    List<Entity> ToshaEntities { get; set; } = new List<Entity>();
    bool EditorMode { get; set; } = false;

    private Timer _timer;

    protected override void OnInitialized()
    {
        ToshaEntities.AddRange(Service.GetEntities());

        if(Token != null)
        {
            var validBy = Tokens.CheckToken(Token);
            if(validBy.HasValue)
            {
                EditorMode = true;
                _timer = new Timer(_ =>
                {
                    EditorMode = false;
                }, null, (int)((validBy.Value - DateTime.Now).TotalMilliseconds), Timeout.Infinite);
            }
        }
    }

    void AddOrEditEntity(Entity newEntity)
    {
        var e = ToshaEntities.FirstOrDefault(x => x.Id == newEntity.Id);
        if (e != null)
        {
            ToshaEntities.Remove(e);
        }
        ToshaEntities.Insert(0, newEntity);
    }
}